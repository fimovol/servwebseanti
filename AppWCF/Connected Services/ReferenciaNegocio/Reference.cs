//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppWCF.ReferenciaNegocio {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/WCFServicios")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdclienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdpaisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombrecliField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direccion {
            get {
                return this.DireccionField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionField, value) != true)) {
                    this.DireccionField = value;
                    this.RaisePropertyChanged("Direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Idcliente {
            get {
                return this.IdclienteField;
            }
            set {
                if ((object.ReferenceEquals(this.IdclienteField, value) != true)) {
                    this.IdclienteField = value;
                    this.RaisePropertyChanged("Idcliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Idpais {
            get {
                return this.IdpaisField;
            }
            set {
                if ((object.ReferenceEquals(this.IdpaisField, value) != true)) {
                    this.IdpaisField = value;
                    this.RaisePropertyChanged("Idpais");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombrecli {
            get {
                return this.NombrecliField;
            }
            set {
                if ((object.ReferenceEquals(this.NombrecliField, value) != true)) {
                    this.NombrecliField = value;
                    this.RaisePropertyChanged("Nombrecli");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReferenciaNegocio.IService2")]
    public interface IService2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Clientes", ReplyAction="http://tempuri.org/IService2/ClientesResponse")]
        System.Data.DataSet Clientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Clientes", ReplyAction="http://tempuri.org/IService2/ClientesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Paises", ReplyAction="http://tempuri.org/IService2/PaisesResponse")]
        System.Data.DataSet Paises();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Paises", ReplyAction="http://tempuri.org/IService2/PaisesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> PaisesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Agregar", ReplyAction="http://tempuri.org/IService2/AgregarResponse")]
        string Agregar(AppWCF.ReferenciaNegocio.Cliente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Agregar", ReplyAction="http://tempuri.org/IService2/AgregarResponse")]
        System.Threading.Tasks.Task<string> AgregarAsync(AppWCF.ReferenciaNegocio.Cliente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Actualizar", ReplyAction="http://tempuri.org/IService2/ActualizarResponse")]
        string Actualizar(AppWCF.ReferenciaNegocio.Cliente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Actualizar", ReplyAction="http://tempuri.org/IService2/ActualizarResponse")]
        System.Threading.Tasks.Task<string> ActualizarAsync(AppWCF.ReferenciaNegocio.Cliente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Eliminar", ReplyAction="http://tempuri.org/IService2/EliminarResponse")]
        string Eliminar(AppWCF.ReferenciaNegocio.Cliente reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Eliminar", ReplyAction="http://tempuri.org/IService2/EliminarResponse")]
        System.Threading.Tasks.Task<string> EliminarAsync(AppWCF.ReferenciaNegocio.Cliente reg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService2Channel : AppWCF.ReferenciaNegocio.IService2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service2Client : System.ServiceModel.ClientBase<AppWCF.ReferenciaNegocio.IService2>, AppWCF.ReferenciaNegocio.IService2 {
        
        public Service2Client() {
        }
        
        public Service2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet Clientes() {
            return base.Channel.Clientes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ClientesAsync() {
            return base.Channel.ClientesAsync();
        }
        
        public System.Data.DataSet Paises() {
            return base.Channel.Paises();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PaisesAsync() {
            return base.Channel.PaisesAsync();
        }
        
        public string Agregar(AppWCF.ReferenciaNegocio.Cliente reg) {
            return base.Channel.Agregar(reg);
        }
        
        public System.Threading.Tasks.Task<string> AgregarAsync(AppWCF.ReferenciaNegocio.Cliente reg) {
            return base.Channel.AgregarAsync(reg);
        }
        
        public string Actualizar(AppWCF.ReferenciaNegocio.Cliente reg) {
            return base.Channel.Actualizar(reg);
        }
        
        public System.Threading.Tasks.Task<string> ActualizarAsync(AppWCF.ReferenciaNegocio.Cliente reg) {
            return base.Channel.ActualizarAsync(reg);
        }
        
        public string Eliminar(AppWCF.ReferenciaNegocio.Cliente reg) {
            return base.Channel.Eliminar(reg);
        }
        
        public System.Threading.Tasks.Task<string> EliminarAsync(AppWCF.ReferenciaNegocio.Cliente reg) {
            return base.Channel.EliminarAsync(reg);
        }
    }
}
